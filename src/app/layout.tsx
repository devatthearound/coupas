'use client';
import { useState, useEffect } from 'react';
// import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { UserProvider } from "./contexts/UserContext";
import { Toaster } from "react-hot-toast";
import Navbar from './components/Navbar';
import { FormatModal, ApiModal, YoutubeModal } from './components/Modals';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const [isFormatModalOpen, setIsFormatModalOpen] = useState(false);
  const [isApiModalOpen, setIsApiModalOpen] = useState(false);
  const [isYoutubeModalOpen, setIsYoutubeModalOpen] = useState(false);
  const [isYoutubeLoggedIn, setIsYoutubeLoggedIn] = useState(false);

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <UserProvider>
        <div className="min-h-screen bg-gray-50 dark:bg-gray-900">
          <Toaster position="bottom-center" />
          <Navbar
            onFormatModalOpen={() => setIsFormatModalOpen(true)}
            onApiModalOpen={() => setIsApiModalOpen(true)}
            onYoutubeLoginOpen={() => setIsYoutubeModalOpen(true)}
            isYoutubeLoggedIn={isYoutubeLoggedIn}
            currentPage="search"
          />
          <FormatModal 
            isOpen={isFormatModalOpen} 
            onClose={() => setIsFormatModalOpen(false)} 
          />
          <ApiModal 
            isOpen={isApiModalOpen} 
            onClose={() => setIsApiModalOpen(false)} 
          />
          <YoutubeModal 
            isOpen={isYoutubeModalOpen} 
            onClose={() => setIsYoutubeModalOpen(false)}
            onYoutubeLogin={setIsYoutubeLoggedIn}
          />
            {children}
          </div>
        </UserProvider>
        </body>
    </html>
  );
}
