name: Build and Release Electron App

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        arch: [x64, arm64]
        # Windows ARM64 빌드는 제외
        exclude:
          - os: windows-latest
            arch: arm64
    
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
      
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build Next.js
        run: npm run next:build
      
      - name: Build Electron
        run: npm run electron:build
      
      # macOS 코드 서명 설정
      - name: Import macOS certificates
        if: matrix.os == 'macos-latest'
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.APPLE_CERTIFICATE }}
          p12-password: ${{ secrets.CERTIFICATE_PASSWORD }}
          keychain-password: ${{ secrets.KEYCHAIN_PASSWORD }}
      
      # macOS 빌드 및 배포
      - name: Build and release for macOS
        if: matrix.os == 'macos-latest'
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # ARM64용 빌드
          if [ "${{ matrix.arch }}" == "arm64" ]; then
            npx electron-builder --mac --arm64 --publish always
          # x64용 빌드
          else
            npx electron-builder --mac --x64 --publish always
          fi
      
      # Windows 빌드 및 배포
      - name: Build and release for Windows
        if: matrix.os == 'windows-latest'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx electron-builder --win --${{ matrix.arch }} --publish always
      
      # 생성된 아티팩트 업로드
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}-artifacts
          path: |
            releases/*.dmg
            releases/*.exe
            releases/*.zip
          if-no-files-found: ignore