name: Build and Release Electron App

on:
  push:
    tags:
      - 'mac-v*'

jobs:
  release:
    runs-on: macos-latest
    
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
      
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build Next.js
        run: npm run next:build
      
      - name: Build Electron
        run: npm run electron:build
      
      # macOS 코드 서명 설정
      - name: Prepare for macOS code signing
        run: |
          echo "${{ secrets.APPLE_CERTIFICATE }}" | base64 --decode > certificate.p12
          security create-keychain -p ${{ secrets.KEYCHAIN_PASSWORD }} build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p ${{ secrets.KEYCHAIN_PASSWORD }} build.keychain
          security import certificate.p12 -k build.keychain -P ${{ secrets.CERTIFICATE_PASSWORD }} -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k ${{ secrets.KEYCHAIN_PASSWORD }} build.keychain
        env:
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      
      # 빌드 및 배포 (macOS)
      - name: Build and release for macOS
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN || secrets.GH_TOKEN }}
        run: |
          npm run electron:dist
      
      # 생성된 아티팩트 업로드
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifacts
          path: |
            dist/*.dmg
            releases/*.dmg
          if-no-files-found: ignore